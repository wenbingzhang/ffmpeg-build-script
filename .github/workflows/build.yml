name: build test

on:
  push:
    paths-ignore:
      - '*.md'
  pull_request:
    branches: [ master ]

jobs:
  build-linux:
    name: build in native linux
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: install libva-dev
        run: |
          sudo apt-get update
          sudo apt-get install -y libva-dev

      - name: build ffmpeg
        run: |
          while sleep 300; do echo "=====[ $SECONDS seconds still running ]====="; done &
          SKIPINSTALL=yes VERBOSE=yes SKIPRAV1E=yes ./build-ffmpeg --build --enable-gpl-and-non-free
          kill %1
      - name: check shared library
        run: |
          ldd ./workspace/bin/ffmpeg
      - name: test run ffmepg
        run: |
          ./workspace/bin/ffmpeg -buildconf
      - name: clean up
        run: |
          ./build-ffmpeg --cleanup

  build-macos-x86-64:
    name: build in native macOS x86-64
    runs-on: macos-14
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: build ffmpeg
        run: |
          while sleep 300; do echo "=====[ $SECONDS seconds still running ]====="; done &
          SKIPINSTALL=yes VERBOSE=yes MACOSX_DEPLOYMENT_TARGET=10.15 ./build-ffmpeg --build --enable-gpl-and-non-free
          kill %1
      - name: compressing
        run: |
          tar czvf ./workspace_macos.tar.gz ./workspace
      - name: check shared library
        run: |
          otool -L ./workspace/bin/ffmpeg
      - name: test run ffmepg
        run: |
          ./workspace/bin/ffmpeg -buildconf
      - name: Upload Asset
        uses: actions/upload-artifact@v4
        with:
          name: workspace_macos.tar.gz
          path: ./workspace_macos.tar.gz
      - name: clean up
        run: |
          ./build-ffmpeg --cleanup


  build-macos:
    name: build in native macOS
    runs-on: macos-15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: build ffmpeg
        run: |
          while sleep 300; do echo "=====[ $SECONDS seconds still running ]====="; done &
          SKIPINSTALL=yes VERBOSE=yes MACOSX_DEPLOYMENT_TARGET=10.15 ./build-ffmpeg --build --enable-gpl-and-non-free
          kill %1
      - name: compressing
        run: |
          tar czvf ./workspace_macos.tar.gz ./workspace
      - name: check shared library
        run: |
          otool -L ./workspace/bin/ffmpeg
      - name: test run ffmepg
        run: |
          ./workspace/bin/ffmpeg -buildconf
      - name: Upload Asset
        uses: actions/upload-artifact@v4
        with:
          name: workspace_macos.tar.gz
          path: ./workspace_macos.tar.gz
      - name: clean up
        run: |
          ./build-ffmpeg --cleanup

  build-docker:
    name: build in docker
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: pull base image
        id: ubuntu_pull
        run: |
          docker pull ubuntu:24.04
      - name: run if ubuntu_pull failed
        if: failure() && steps.ubuntu_pull.outcome == 'failure'
        run: |
          docker pull ubuntu:24.04
      - name: build ffmpeg
        run: |
          docker build -t ffmpeg:ubuntu -f Dockerfile .
      - name: test run ffmepg
        run: |
          docker run --rm ffmpeg:ubuntu -buildconf

  build-cuda-ubuntu-docker:
    name: build in ubuntu docker with cuda
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: pull base image
        id: cuda_ubuntu_pull
        run: |
          docker pull nvidia/cuda:12.6.2-devel-ubuntu22.04
          docker pull ubuntu:22.04
      - name: run if cuda_ubuntu_pull failed
        if: failure() && steps.cuda_ubuntu_pull.outcome == 'failure'
        run: |
          docker pull nvidia/cuda:12.6.2-devel-ubuntu22.04
          docker pull ubuntu:22.04
      - name: build ffmpeg
        run: |
          docker build -t ffmpeg:cuda-ubuntu -f cuda-ubuntu.dockerfile .
      - name: test run ffmepg
        run: |
          docker run --rm ffmpeg:cuda-ubuntu -buildconf

  build-full-static:
    name: full static build in docker
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: pull base image
        id: cuda_ubuntu_pull
        run: |
          docker pull nvidia/cuda:12.6.2-devel-ubuntu22.04
      - name: run if cuda_ubuntu_pull failed
        if: failure() && steps.cuda_ubuntu_pull.outcome == 'failure'
        run: |
          docker pull nvidia/cuda:12.6.2-devel-ubuntu22.04
      - name: build ffmpeg
        run: |
          docker build -t ffmpeg:cuda-static -f full-static.dockerfile .
      - name: test run ffmepg
        run: |
          docker run --rm ffmpeg:cuda-static -buildconf
